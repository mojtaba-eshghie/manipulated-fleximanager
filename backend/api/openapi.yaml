openapi: 3.0.1
info:
  contact:
    email: yourfriends@flexiwan.com
    name: API support
    url: https://flexiwan.com
  description: This is the REST API for flexiWAN management.
  license:
    name: AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  termsOfService: https://flexiwan.com/legal/terms-of-service/
  title: FlexiWAN API
  version: 1.0.0
servers:
- description: Main server
  url: https://manage.flexiwan.com:443/api
paths:
  /version:
    get:

      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Get version of the management
      tags:
      - Version
      x-swagger-router-controller: Version
  /tokens:
    get:
      operationId: tokensGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string

      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Token'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all Tokens
      tags:
      - Tokens
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: TokensController
      x-openapi-router-service: TokensService
    post:
      operationId: tokensPOST
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Create new access token
      tags:
      - Tokens
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: TokensController
      x-openapi-router-service: TokensService
  /tokens/{id}:
    get:
      operationId: tokensIdGET
      parameters:
      - description: Numeric ID of the Token to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all Tokens
      tags:
      - Tokens
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: TokensController
      x-openapi-router-service: TokensService
    delete:
      operationId: tokensIdDELETE
      parameters:
      - description: Numeric ID of the Token to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete token
      tags:
      - Tokens
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: TokensController
      x-openapi-router-service: TokensService
    put:
      operationId: tokensIdPUT
      parameters:
      - description: Numeric ID of the Token to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Created
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify a token
      tags:
      - Tokens
      x-swagger-router-controller: Tokens
      x-openapi-router-controller: TokensController
      x-openapi-router-service: TokensService
  /accesstokens:
    get:
      operationId: accesstokensGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessToken'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all AccessTokens
      tags:
      - Access Tokens
      x-swagger-router-controller: AccessTokens
      x-openapi-router-controller: AccessTokensController
      x-openapi-router-service: AccessTokensService
    post:
      operationId: accesstokensPOST
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Create new access token
      tags:
      - Access Tokens
      x-swagger-router-controller: AccessTokens
      x-openapi-router-controller: AccessTokensController
      x-openapi-router-service: AccessTokensService
  /accesstokens/{id}:
    delete:
      operationId: accesstokensIdDELETE
      parameters:
      - description: Numeric ID of the Access token to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete access token
      tags:
      - Access Tokens
      x-swagger-router-controller: AccessTokens
      x-openapi-router-controller: AccessTokensController
      x-openapi-router-service: AccessTokensService
  /devices:
    get:
      operationId: devicesGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all registered devices
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/latestVersions:
    get:
      operationId: devicesLatestVersionsGET
      responses:
       "200":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/DeviceLatestVersion'
         description: Successful operation
       "401":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Unauthorized
       "403":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Forbidden
       "404":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: The specified resource was not found
       "500":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Internal server error
       default:
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get devices latest available version
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/apply:
    post:
      operationId: devicesApplyPOST
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCommand'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplyJobsResponse'
          description: Job IDs Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Execute an action on the device side
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/upgdSched:
    post:
      operationId: devicesUpgdSchedPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicesUpgradeRequest'
      parameters: 
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Schedule upgrade of devices
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}:
    get:
      operationId: devicesIdGET
      parameters:
      - description: Numeric ID of the Device to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get device by ID
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    delete:
      operationId: devicesIdDELETE
      parameters:
      - description: Numeric ID of the Device to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
       "204":
         description: Successful operation
       "401":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Unauthorized
       "403":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Forbidden
       "404":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: The specified resource was not found
       "500":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Internal server error
       default:
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete device
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    put:
      operationId: devicesIdPUT
      parameters:
      - description: Numeric ID of the Device to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/DeviceRequest'
      responses:
       "200":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Device'
         description: Successful operation
       "401":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Unauthorized
       "403":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Forbidden
       "404":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: The specified resource was not found
       "500":
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Internal server error
       default:
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
         description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify device
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/upgdSched:
    post:
      operationId: devicesIdUpgdSchedPOST
      parameters:
      - description: Numeric ID of the Device to be upgraded
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceUpgradeRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Create new access token
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/configuration:
    get:
      operationId: devicesIdConfigurationGET
      parameters:
      - description: Numeric ID of the Device to retrieve configuration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceConfiguration'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get Device
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
#
#  /devices/register:
#    post:
#      operationId: devicesRegisterPOST
#      responses:
#        "204":
#          description: No Content
#        "400":
#          description: Bad Request
#        "401":
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#          description: Unauthorized
#        "402":
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Error"
#          description: Payment needed
#        "403":
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#          description: Forbidden
#        "500":
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#          description: Internal server error
#        default:
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#          description: Unexpected error
#      security:
#      - apiKey: []
#      - bearerAuth: []
#      summary: Execute an action on the device side
#      tags:
#      - Devices
#      x-swagger-router-controller: Devices
#      x-openapi-router-controller: DevicesController
#      x-openapi-router-service: DevicesService
#  /devices/execute:
#    post:
#      operationId: devicesExecutePOST
#      parameters:
#      - description: Command to execute
#        explode: true
#        in: query
#        name: action
#        required: true
#        schema:
#          type: string
#        style: form
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/CommandRequest'
#      responses:
#        "204":
#          description: No Content
#        "400":
#          description: Bad Request
#        "401":
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#          description: Unauthorized
#        "403":
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#          description: Forbidden
#        "500":
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#          description: Internal server error
#        default:
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
#          description: Unexpected error
#      security:
#      - apiKey: []
#      - bearerAuth: []
#      summary: Execute an action on the device side
#      tags:
#      - Devices
#      x-swagger-router-controller: Devices
#      x-openapi-router-controller: DevicesController
#      x-openapi-router-service: DevicesService

  /tunnels:
    get:
      operationId: tunnelsGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tunnel'
                type: array
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device tunnels information
      tags:
      - Tunnels
      x-swagger-router-controller: Routes
      x-openapi-router-controller: TunnelsController
      x-openapi-router-service: TunnelsService
  /tunnels/{id}:
    delete:
      operationId: TunnelsIdDELETE
      parameters:
      - description: Numeric ID of the Tunnel to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete a tunnel
      tags:
      - Tunnels
      x-swagger-router-controller: Tunnels
      x-openapi-router-controller: TunnelsController
      x-openapi-router-service: TunnelsService
  /devices/{id}/routes:
    get:
      operationId: devicesIdRoutesGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRouteInformation'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device routes information
      tags:
      - Routes
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/staticroutes:
    post:
      operationId: devicesIdStaticroutesPOST
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Create new static route
      tags:
      - Static Routes
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    get:
      operationId: devicesIdStaticroutesGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StaticRoute'
                type: array
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device static routes information
      tags:
      - Static Routes
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/staticroutes/{route}:
    delete:
      operationId: devicesIdStaticroutesRouteDELETE
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the Route to delete
        explode: false
        in: path
        name: route
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete static route
      tags:
      - Static Routes
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    patch:
      operationId: devicesIdStaticroutesRoutePATCH
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the Route to modify
        explode: false
        in: path
        name: route
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaticRouteRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRoute'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify static route
      tags:
      - Static Routes
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/dhcp:
    post:
      operationId: devicesIdDhcpPOST
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dhcp'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Add DHCP server
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    get:
      operationId: devicesIdDhcpGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Dhcp'
                type: array
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device DHCP information
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/dhcp/{dhcpId}:
    get:
      operationId: devicesIdDhcpDhcpIdGET
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the DHCP to get
        explode: false
        in: path
        name: dhcpId
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dhcp'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get DHCP by ID
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    delete:
      operationId: devicesIdDhcpDhcpIdDELETE
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the DHCP to delete
        explode: false
        in: path
        name: dhcpId
        required: true
        schema:
          type: string
        style: simple
      - description: Force delete
        explode: false
        in: query
        name: force
        required: false
        schema:
          enum:
          - yes
          - no
          type: string
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "202":
          description: Successful operation
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete DHCP
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    put:
      operationId: devicesIdDhcpDhcpIdPUT
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the DHCP to modify
        explode: false
        in: path
        name: dhcpId
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dhcp'
          description: Successful operation
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify DHCP
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    patch:
      operationId: devicesIdDhcpDhcpIdPATCH
      parameters:
      - description: Numeric ID of the Device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the DHCP to modify
        explode: false
        in: path
        name: dhcpId
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dhcp'
          description: Successful operation
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: ReApply DHCP
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/statistics:
    get:
      operationId: devicesStatisticsGET
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceStatistics'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve devices statistics information
      tags:
      - Statistics
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/statistics:
    get:
      operationId: devicesIdStatisticsGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description: Interface Number (PCI Address) to filter
        explode: true
        in: query
        name: ifnum
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceStatistics'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device statistics information
      tags:
      - Statistics
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/logs:
    get:
      operationId: devicesIdLogsGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Filter to be applied
        explode: true
        in: query
        name: filter
        required: false
        schema:
          enum:
          - fwagent
          - syslog
          - dhcp
          - vpp
          - ospf
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceLog'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device logs information
      tags:
      - Logs
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/traces:
    get:
      operationId: devicesIdPacketTracesGET
      parameters:
      - description: Numeric ID of the Device to fetch information about
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of packets to capture
        explode: true
        in: query
        name: packets
        required: false
        schema:
          type: integer
        style: form
      - description: The wait time (sec) for packets to capture
        explode: true
        in: query
        name: timeout
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicePacketTraces'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Retrieve device logs information
      tags:
      - Logs
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /devices/{id}/apply:
    post:
      operationId: devicesIdApplyPOST
      parameters:
      - description: Numeric ID of the Device to start
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCommand'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplyJobsResponse'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Execute an action on the device side
      tags:
      - Devices
      x-swagger-router-controller: Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /jobs:
    get:
      operationId: jobsGET
      parameters:
      - description: A filter on the job status
        explode: true
        in: query
        name: status
        required: true
        schema:
          enum:
          - all
          - complete
          - failed
          - inactive
          - delayed
          - active
          type: string
        style: form
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: A filter on specific job ids (comma separated)
        explode: true
        in: query
        name: ids
        required: false
        schema:
          type: string
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Job'
                type: array
                x-content-type: application/json
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get all Jobs
      tags:
      - Jobs
      x-swagger-router-controller: Jobs
      x-openapi-router-controller: JobsController
      x-openapi-router-service: JobsService
    delete:
      operationId: jobsDELETE
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobsDeleteRequest'
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete a job
      tags:
      - Jobs
      x-swagger-router-controller: Jobs
      x-openapi-router-controller: JobsController
      x-openapi-router-service: JobsService
  /jobs/{id}:
    get:
      operationId: jobsIdGET
      parameters:
      - description: Numeric ID of the Job to get
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get Job by ID
      tags:
      - Jobs
      x-swagger-router-controller: Jobs
      x-openapi-router-controller: JobsController
      x-openapi-router-service: JobsService
    delete:
      operationId: jobsIdDELETE
      parameters:
      - description: Numeric ID of the Job to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete a job
      tags:
      - Jobs
      x-swagger-router-controller: Jobs
      x-openapi-router-controller: JobsController
      x-openapi-router-service: JobsService
  /notifications:
    get:
      operationId: notificationsGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      - description: Operation to be executed
        explode: true
        in: query
        name: op
        required: false
        schema:
          type: string
      - description: Filter by status to be executed
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Notification'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get all Notifications
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
    put:
      operationId: notificationsPUT
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationsPutRequest'
      responses:
        "204":
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify notifications
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
  /notifications/{id}:
    put:
      operationId: notificationsIdPUT
      parameters:
      - description: Numeric ID of the notification to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationsIDPutRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify notification
      tags:
      - Notifications
      x-swagger-router-controller: Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
  /members:
    get:
      operationId: membersGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Member'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get all Members
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
    post:
      operationId: membersPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Member has been added
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Create new member
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
  /members/{id}:
    get:
      operationId: membersIdGET
      parameters:
      - description: Numeric ID of the Member to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Member'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get Member
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
    put:
      operationId: membersIdPUT
      parameters:
      - description: Numeric ID of the account to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify member
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
    delete:
      operationId: membersIdDELETE
      parameters:
      - description: Numeric ID of the Member to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete member
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
  /members/options/{type}:
    get:
      operationId: membersOptionsTypeGET
      parameters:
      - description: Numeric ID of the Member to retrieve
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Member'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get Member
      tags:
      - Members
      x-swagger-router-controller: Members
      x-openapi-router-controller: MembersController
      x-openapi-router-service: MembersService
  /accounts:
    get:
      operationId: accountsGET
      parameters:
        - description: The number of items to skip before starting to collect the result
            set
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
          style: form
        - description: The numbers of items to return
          explode: true
          in: query
          name: limit
          required: false
          schema:
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Get all Accounts
      tags:
      - Accounts
      x-swagger-router-controller: Accounts
      x-openapi-router-controller: AccountsController
      x-openapi-router-service: AccountsService
  /accounts/select:
    post:
      operationId: accountsSelectPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountSelectRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account has been selected
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Select account
      tags:
      - Accounts
      x-swagger-router-controller: Accounts
      x-openapi-router-controller: AccountsController
      x-openapi-router-service: AccountsService
  /accounts/{id}:
    get:
      operationId: accountsIdGET
      parameters:
      - description: Numeric ID of the Account to retrieve information
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Retrieve account information
      tags:
      - Accounts
      x-swagger-router-controller: Accounts
      x-openapi-router-controller: AccountsController
      x-openapi-router-service: AccountsService
    put:
      operationId: accountsIdPUT
      parameters:
      - description: Numeric ID of the Account to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - bearerAuth: []
      - apiKey: []
      summary: Modify account information
      tags:
      - Accounts
      x-swagger-router-controller: Accounts
      x-openapi-router-controller: AccountsController
      x-openapi-router-service: AccountsService
  /organizations:
    get:
      operationId: organizationsGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all organizations
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
    post:
      operationId: organizationsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Add new organization
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
  /organizations/select:
    post:
      operationId: organizationsSelectPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationSelectRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Select organization
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
  /organizations/{id}:
    get:
      operationId: organizationsIdGET
      parameters:
      - description: Numeric ID of the Organization to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get Organization by ID
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
    delete:
      operationId: organizationsIdDELETE
      parameters:
      - description: Numeric ID of the Organization to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete organization
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
    put:
      operationId: organizationsIdPUT
      parameters:
      - description: Numeric ID of the Organization to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify organization
      tags:
      - Organizations
      x-swagger-router-controller: Organizations
      x-openapi-router-controller: OrganizationsController
      x-openapi-router-service: OrganizationsService
  /invoices:
    get:
      operationId: invoicesGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Billing'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all invoices
      tags:
      - Invoices
      x-swagger-router-controller: Billing
      x-openapi-router-controller: BillingController
      x-openapi-router-service: BillingService
  /coupons:
    post:
      operationId: couponsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponRequest'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Add new coupon
      tags:
      - Coupons
      x-swagger-router-controller: Billing
      x-openapi-router-controller: BillingController
      x-openapi-router-service: BillingService
  /pathlabels:
    get:
      operationId: pathlabelsGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PathLabel'
                type: array
                x-content-type: application/json
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all Path labels
      tags:
      - Path Labels
      x-swagger-router-controller: PathLabels
      x-openapi-router-controller: PathLabelsController
      x-openapi-router-service: PathLabelsService
    post:
      operationId: pathlabelsPOST
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathLabelRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathLabel'
          description: Path label created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Add a new Path label
      tags:
      - Path Labels
      x-swagger-router-controller: PathLabels
      x-openapi-router-controller: PathLabelsController
      x-openapi-router-service: PathLabelsService
  /pathlabels/{id}:
    get:
      operationId: pathlabelsIdGET
      parameters:
      - description: Numeric ID of the Path label to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathLabel'
                x-content-type: application/json
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get a Path label by id
      tags:
      - Path Labels
      x-swagger-router-controller: PathLabels
      x-openapi-router-controller: PathLabelsController
      x-openapi-router-service: PathLabelsService
    put:
      operationId: pathlabelsIdPUT
      parameters:
      - description: Numeric ID of the Path label to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathLabelRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathLabel'
          description: A new Path label created
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathLabel'
          description: Path label was modified
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify a Path label
      tags:
      - Path Labels
      x-swagger-router-controller: PathLabels
      x-openapi-router-controller: PathLabelsController
      x-openapi-router-service: PathLabelsService
    delete:
      operationId: pathlabelsIdDELETE
      parameters:
      - description: Numeric ID of the Path label to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete a Path label
      tags:
      - Path Labels
      x-swagger-router-controller: PathLabels
      x-openapi-router-controller: PathLabelsController
      x-openapi-router-service: PathLabelsService

  /mlpolicies:
    get:
      operationId: mlpoliciesGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MLPolicy'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all Multi Link policies
      tags:
      - MultiLink Policies
      x-swagger-router-controller: MLPolicies
      x-openapi-router-controller: MLPoliciesController
      x-openapi-router-service: MLPoliciesService
    post:
      operationId: mlpoliciesPOST
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MLPolicyRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLPolicy'
          description: Multi Link policy created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Add a new Multi Link policy
      tags:
      - MultiLink Policies
      x-swagger-router-controller: MLPolicies
      x-openapi-router-controller: MLPoliciesController
      x-openapi-router-service: MLPoliciesService
  /mlpolicies/{id}:
    get:
      operationId: mlpoliciesIdGET
      parameters:
      - description: Numeric ID of the Multi Link policy to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLPolicy'
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get a Multi Link policy by id
      tags:
      - MultiLink Policies
      x-swagger-router-controller: MLPolicies
      x-openapi-router-controller: MLPoliciesController
      x-openapi-router-service: MLPoliciesService
    put:
      operationId: mlpoliciesIdPUT
      parameters:
      - description: Numeric ID of the Multi Link policy to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MLPolicyRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLPolicy'
          description: A new Multi Link created
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLPolicy'
          description: Multi Link was modified
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify a Multi Link policy
      tags:
      - MultiLink Policies
      x-swagger-router-controller: MLPolicies
      x-openapi-router-controller: MLPoliciesController
      x-openapi-router-service: MLPoliciesService
    delete:
      operationId: mlpoliciesIdDELETE
      parameters:
      - description: Numeric ID of the Multi Link policy to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete a Multi Link policy
      tags:
      - MultiLink Policies
      x-swagger-router-controller: MLPolicies
      x-openapi-router-controller: MLPoliciesController
      x-openapi-router-service: MLPoliciesService
  /mlpolicies/list:
    get:
      operationId: mlpoliciesListGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MLPolicyList'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all Multi Link policies names and IDs only
      tags:
      - MultiLink Policies
      x-swagger-router-controller: MLPolicies
      x-openapi-router-controller: MLPoliciesController
      x-openapi-router-service: MLPoliciesService
  /mlpolicies/meta:
    get:
      operationId: mlpoliciesMetaGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MLPolicyMetaData'
                type: array
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all multi link policies metadata
      tags:
      - MultiLink Policies
      x-swagger-router-controller: MLPolicies
      x-openapi-router-controller: MLPoliciesController
      x-openapi-router-service: MLPoliciesService
  /appidentifications:
    get:
      operationId: appIdentificationsGET
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppIdentification'
                type: object
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all app identifications
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
    post:
      operationId: appIdentificationsPOST
      parameters:
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppIdentification'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppIdentification'
          description: Created
          headers:
            Location:
              description: Location of a new resource created
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Create new app identification
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
  /appidentifications/{id}:
    delete:
      operationId: appIdentificationsIdDELETE
      parameters:
      - description: Numeric ID of the app identification to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Delete app identification
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
  /appidentifications/imported/{id}:
    get:
      operationId: appIdentificationsIdGET
      parameters:
      - description: App identification id to retrieve
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppIdentification'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get app identification by id
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
    put:
      operationId: appIdentificationsIdPUT
      parameters:
      - description: Numeric ID of the app identification to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppIdentImpCustReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppIdentification'
          description: Created
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify app identification
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
  /appidentifications/custom/{id}:
    get:
      operationId: appIdentificationsCustomIdGET
      parameters:
      - description: App identification id to retrieve
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppIdentification'
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get app identification by id
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
    put:
      operationId: appIdentificationsCustomIdPUT
      parameters:
      - description: Numeric ID of the app identification to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppIdentification'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppIdentification'
          description: Successful operation
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Modify app identification
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
  /appidentifications/imported/{id}/reset:
    put:
      operationId: appIdentificationsIdResetPUT
      parameters:
      - description: Numeric ID of the app identification to reset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppIdentification'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppIdentification'
          description: Created
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Reset imported app identification to its default values
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
  /appidentifications/installed:
    get:
      operationId: appIdentificationsInstalledGET
      parameters:
      - description: Devices app identification installed on
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The numbers of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Organization to be filtered by
        explode: true
        in: query
        name: org
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstalledAppIdentifications'
                x-content-type: application/json
          description: Successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - apiKey: []
      - bearerAuth: []
      summary: Get all installed app identifications
      tags:
      - App Identifications
      x-swagger-router-controller: AppIdentifications
      x-openapi-router-controller: AppIdentificationsController
      x-openapi-router-service: AppIdentificationsService
components:
  responses:
    NotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified resource was not found
    ForbiddenError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Forbidden
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal server error
    UnauthorizedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
  schemas:
    Version:
      properties:
        version:
          type: string
      required:
      - version
      type: object
    AccessToken:
      example:
        isValid: true
        name: name
        _id: id
        token: token
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        token:
          type: string
        isValid:
          default: true
          type: boolean
      type: object
    AccessTokenRequest:
      example:
        name: name
      properties:
        name:
          type: string
        validityEntity:
          type: string
      type: object
    MemberRequest:
      example:
        userJobTitle: userJobTitle
        userEntity: userEntity
        userLastName: userLastName
        userFirstName: userFirstName
        userRole: viewer
        email: email
        userPermissionTo: account
      properties:
        email:
          type: string
        userFirstName:
          type: string
        userLastName:
          type: string
        userJobTitle:
          type: string
        userPermissionTo:
          enum:
          - account
          - group
          - organization
          type: string
        userEntity:
          type: string
        userRole:
          enum:
          - viewer
          - manager
          - owner
          type: string
      type: object
    Token:
      example:
        _id: id
        org: org
        name: name
        token: token
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        org:
          type: string
        name:
          type: string
        token:
          type: string
        createdAt:
          type: string
      type: object
    TokenRequest:
      example:
        name: name
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    AppIdentificationRules:
      example:
        ip: 127.0.0.1
        ports: 42
        protocol: tcp
      properties:
        ip:
          type: string
        ports:
          type: string
        protocol:
          enum:
          - tcp
          - udp
          type: string
      type: object
    AppIdentification:
      example:
        _id: _id
        id: _id
        name: custom:app-name
        description: app identification description
        category: internet
        serviceClass: oam
        importance: high
        rules: [
          {ip: "127.0.0.1"},
          {ports: "42"},
          {ports: "128-129"},
          {ip: "127.0.0.1", ports: "42", protocol: "tcp"}
        ]
      properties:
        _id:
          maxLength: 24
          minLength: 24
        id:
          maxLength: 24
          minLength: 1
        name:
          maxLength: 30
          minLength: 2
          type: string
        description:
          maxLength: 128
          type: string
        category:
          maxLength: 30
          minLength: 2
          type: string
        serviceClass:
          maxLength: 30
          minLength: 2
          type: string
        importance:
          enum:
          - high
          - medium
          - low
          type: string
        rules:
          items:
            $ref: '#/components/schemas/AppIdentificationRules'
          type: array
      type: object
    AppIdentImpCustReq:
      example:
        category: internet
        serviceClass: oam
        importance: high
      properties:
        category:
          maxLength: 30
          minLength: 2
          type: string
        serviceClass:
          maxLength: 30
          minLength: 2
          type: string
        importance:
          enum:
          - high
          - medium
          - low
          type: string
      type: object
    InstalledAppIdentifications:
      example:
        totalNotUpdated: 3
        devices:
          _id: _id
          updatedAt: Date
          clients: Client List
          status: ok
      properties:
        totalNotUpdated:
          type: integer
        devices:
          items:
            $ref: '#/components/schemas/InstalledApplication'
          type: array
      type: object
    InstalledApplication:
      example:
        _id: _id
        updatedAt: Date
        clients: Client List
        status: ok
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        updatedAt:
          type: string
        clients:
          items:
            type: string
          type: array
        status:
          enum:
          - ok
          - install
          - uninstall
          type: string
      type: object
    Account:
      example:
        country: country
        companyType: companyType
        companyDesc: companyDesc
        enableNotifications: true
        name: name
        _id: _id
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        companyType:
          type: string
        companyDesc:
          type: string
        country:
          maxLength: 2
          type: string
        enableNotifications:
          default: true
          type: boolean
      type: object
    AccountRequest:
      example:
        country: country
        companyType: companyType
        companyDesc: companyDesc
        enableNotifications: true
        name: name
      properties:
        name:
          type: string
        companyType:
          type: string
        companyDesc:
          type: string
        country:
          maxLength: 2
          type: string
        enableNotifications:
          default: true
          type: boolean
      type: object
    OrganizationRequest:
      example:
        name: name
        group: group
      required:
        - name
        - group
      properties:
        name:
          type: string
        group:
          type: string
      type: object
    Organization:
      example:
        name: name
        _id: _id
        account: account
        group: group
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        group:
          type: string
        account:
          type: string
      type: object
    ApplyJobsResponse:
      properties:
        ids:
          items:
            type: integer
          type: array
        status:
          enum:
          - completed
          - partially completed
          type: string
        message:
          type: string
    JobsDeleteRequest:
      properties:
        ids:
          items:
            type: integer
          type: array
    NotificationRequest:
      properties:
        count:
          minimum: 0
          type: integer
      type: object
    NotificationsIDPutRequest:
      example:
        status: read
      properties:
        status:
          enum:
          - read
          - unread
          type: string
    NotificationsPutRequest:
      properties:
        status:
          enum:
          - read
          - unread
          type: string
        ids:
          items:
            type: string
          type: array
    Notification:
      example:
        status: unread
        _id: 123
        title: Router state change
        time: "2019-12-19T12:10:01.667Z"
        device: test0
        machineId: "123"
        details: Router state changed to "Not running"
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        title:
          type: string
        status:
          enum:
          - read
          - unread
          type: string
        time:
          type: string
        device:
          type: string
          nullable: true
        machineId:
          type: string
        details:
          type: string
      type: object
    JobAttempt:
      example:
        max: 7
        made: 5
        remaining: 2
      properties:
        made:
          type: integer
        remaining:
          type: integer
        max:
          type: integer
      type: object
    Job:
      example:
        progress: 1
        created_at: created_at
        _id: 0
        state: 5
        type: type
        priority: 6
        error: error
        attempts:
          max: 7
          made: 5
          remaining: 2
      properties:
        _id:
          type: integer
        type:
          type: string
        data:
          type: object
        result:
          type: object
        priority:
          type: integer
        error:
          type: string
        progress:
          type: string
        state:
          type: string
        created_at:
          type: string
        attempts:
          type: object
      type: object
    DeviceRequest:
      example:
        interfaces:
        - IPv6: IPv6
          PublicIP: PublicIP
          IPv4: IPv4
          gateway: gateway
          metric: 0
          type: WAN
          MAC: MAC
          dhcp: "no"
          routing: OSPF
          IPv6Mask: "64"
          isAssigned: true
          driver: driver
          IPv4Mask: "24"
          name: name
          pciaddr: pciaddr
          _id: _id
        - IPv6: IPv6
          PublicIP: PublicIP
          IPv4: IPv4
          type: WAN
          MAC: MAC
          dhcp: "no"
          routing: OSPF
          IPv6Mask: "64"
          isAssigned: true
          driver: driver
          IPv4Mask: "24"
          name: name
          pciaddr: pciaddr
          _id: _id
        org: org
        isConnected: true
        upgradeSchedule:
          jobQueued: true
          _id: _id
          time: "2019-12-19T12:10:01.667Z"
        description: description
        deviceStatus: deviceStatus
        deviceToken: deviceToken
        labels:
        - labels
        - labels
        site: site
        hostname: host01
        machineId: machineId
        versions:
          agent: agent
          router: router
          device: device
        name: name
        pendingDevModification: true
        isApproved: true
        staticroutes:
        - destination: destination
          interface: interface
          gateway: gateway
        - destination: destination
          interface: interface
          gateway: gateway
        fromToken: fromToken
        account: account
        ipList: ipList
        dhcp: dhcp list
      properties:
        machineId:
          type: string
        name:
          type: string
        description:
          type: string
        site:
          type: string
        isApproved:
          type: boolean
        isConnected:
          type: boolean
        pendingDevModification:
          type: boolean
        hostname:
          type: string
        deviceStatus:
          type: object
        deviceToken:
          type: string
        fromToken:
          type: string
        account:
          type: string
        org:
          type: string
        ipList:
          type: string
        staticroutes:
          items:
            $ref: '#/components/schemas/StaticRoute'
          type: array
        dhcp:
          items:
            $ref: '#/components/schemas/Dhcp'
          type: array
        upgradeSchedule:
          $ref: '#/components/schemas/UpgradeSchedule'
        labels:
          items:
            type: string
          type: array
        interfaces:
          items:
            $ref: '#/components/schemas/Interface'
          type: array
        versions:
          $ref: '#/components/schemas/DeviceVersion'
      type: object
    Device:
      example:
        interfaces:
        - IPv6: IPv6
          PublicIP: PublicIP
          IPv4: IPv4
          type: WAN
          gateway: gateway
          metric: 0
          MAC: MAC
          dhcp: "no"
          routing: OSPF
          IPv6Mask: "64"
          isAssigned: true
          driver: driver
          IPv4Mask: "24"
          name: name
          pciaddr: pciaddr
          _id: _id
          pathlabels: path labels list
        - IPv6: IPv6
          PublicIP: PublicIP
          IPv4: IPv4
          type: WAN
          gateway: gateway
          metric: 0
          MAC: MAC
          dhcp: "no"
          routing: OSPF
          IPv6Mask: "64"
          isAssigned: true
          driver: driver
          IPv4Mask: "24"
          name: name
          pciaddr: pciaddr
          _id: _id
          pathlabels: path labels list
        org: org
        isConnected: true
        upgradeSchedule:
          jobQueued: true
          _id: _id
          time: "2019-12-19T12:10:01.667Z"
        description: description
        deviceStatus: deviceStatus
        deviceToken: deviceToken
        labels:
        - labels
        - labels
        machineId: machineId
        site: site
        hostname: host01
        versions:
          agent: agent
          router: router
          device: device
          vpp: vpp
          frr: frr
        name: name
        _id: _id
        pendingDevModification: true
        isApproved: true
        staticroutes:
        - id: 1
          destination: 20.20.0.0
          gateway: 20.20.0.1
          interface: eth0
        - id: 2
          destination: 10.10.0.0
          gateway: 10.10.0.1
          interface: eth1
        fromToken: fromToken
        account: account
        ipList: ipList
        dhcp: dhcp list
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        machineId:
          type: string
        name:
          type: string
        description:
          type: string
        site:
          type: string
        isApproved:
          type: boolean
        isConnected:
          type: boolean
        pendingDevModification:
          type: boolean
        hostname:
          type: string
        deviceStatus:
          type: object
        deviceToken:
          type: string
        fromToken:
          type: string
        account:
          type: string
        org:
          type: string
        ipList:
          type: string
        staticroutes:
          items:
            $ref: '#/components/schemas/StaticRoute'
          type: array
        dhcp:
          items:
            $ref: '#/components/schemas/Dhcp'
          type: array
        upgradeSchedule:
          $ref: '#/components/schemas/UpgradeSchedule'
        labels:
          items:
            type: string
          type: array
        interfaces:
          items:
            $ref: '#/components/schemas/Interface'
          type: array
        versions:
          $ref: '#/components/schemas/DeviceVersion'
      type: object
    UpgradeSchedule:
      example:
        jobQueued: true
        _id: _id
        time: "2019-12-19T12:10:01.667Z"
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        time:
          type: string
          nullable: true
        jobQueued:
          type: boolean
      type: object
    Interface:
      example:
        IPv6: IPv6
        PublicIP: PublicIP
        IPv4: IPv4
        type: WAN
        MAC: MAC
        gateway: gateway
        metric: 0
        dhcp: "no"
        routing: OSPF
        IPv6Mask: "64"
        isAssigned: true
        driver: driver
        IPv4Mask: "24"
        name: name
        pciaddr: pciaddr
        _id: _id
        pathlabels: path labels list
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        pciaddr:
          type: string
        driver:
          type: string
        dhcp:
          enum:
          - yes
          - no
          type: string
        IPv4:
          type: string
        IPv6:
          type: string
        PublicIP:
          type: string
        gateway:
          type: string
        metric:
          type: string
        isAssigned:
          type: boolean
        routing:
          enum:
          - OSPF
          - NONE
          type: string
        type:
          enum:
          - WAN
          - LAN
          - NONE
          type: string
        IPv4Mask:
          type: string
        MAC:
          type: string
        name:
          type: string
        IPv6Mask:
          type: string
        pathlabels:
          items:
            $ref: '#/components/schemas/PathLabel'
          type: array
      type: object
    DeviceVersion:
      example:
        agent: agent
        router: router
        device: device
      properties:
        agent:
          type: string
        device:
          type: string
        router:
          type: string
      type: object
    DeviceLatestVersion:
      example:
        "versions":
          "device": "1.1.51"
          "agent": "1.0.39"
          "vpp": "19.01-rc0"
          "frr": "7.1"
          "router": "01.01.10"
        "versionDeadline": "2020-03-15T00:00:00.000Z"
      properties:
        versions:
          $ref: '#/components/schemas/DeviceVersion'
        versionDeadLite:
          type: string
    Role:
      enum:
      - owner
      - manager
      - viewer
      type: string
    Member:
      example:
        user_email: user_email
        role: owner
        user__id: user__id
        user_name: user_name
        account_name: account_name
        _id: _id
        to: to
        organization_name: organization_name
        account__id: account__id
        group: group
        organization__id: organization__id
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        user__id:
          maxLength: 24
          minLength: 24
          type: string
        user_name:
          type: string
        user_email:
          type: string
        to:
          type: string
        account_name:
          type: string
        account__id:
          maxLength: 24
          minLength: 24
          type: string
        group:
          type: string
          nullable: true
        organization_name:
          type: string
          nullable: true
        organization__id:
          maxLength: 24
          minLength: 24
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/Role'
      type: object
    LoginRequest:
      example:
        password: password
        username: username
      properties:
        username:
          type: string
        password:
          type: string
      required: ["username", "password"]
      type: object
    LoginResponse:
      example:
        username: "John Doe"
      properties:
        username:
          type: string
      type: object
    DeviceStatus:
      enum:
      - connected
      - disconnected
      type: string
    DeviceRouteInformation:
      example:
        osRoutes:
        - metric: 0
          destination: destination
          flags: flags
          interface: interface
          gateway: gateway
          mask: mask
        - metric: 0
          destination: destination
          flags: flags
          interface: interface
          gateway: gateway
          mask: mask
        vppRoutes:
        - metric: 6
        - metric: 6
      properties:
        status:
          $ref: '#/components/schemas/DeviceStatus'
        osRoutes:
          items:
            $ref: '#/components/schemas/DeviceRouteOs'
          type: array
        vppRoutes:
          items:
            $ref: '#/components/schemas/DeviceRouteVpp'
          type: array
      type: object
    DeviceRouteOs:
      example:
        metric: 0
        destination: destination
        flags: flags
        interface: interface
        gateway: gateway
        mask: mask
      properties:
        metric:
          type: integer
        destination:
          type: string
        mask:
          type: string
        flags:
          type: string
        interface:
          type: string
        gateway:
          type: string
      type: object
    DeviceRouteVpp:
      example:
        metric: 6
      properties:
        metric:
          type: integer
      type: object
    DeviceStatistics:
      example:
        status: status
      properties:
        status:
          type: object
      type: object
    DeviceConfiguration:
      example:
        configuration:
        - message: message
          params:
          - {}
          - {}
        - message: message
          params:
          - {}
          - {}
        status: connected
      properties:
        status:
          $ref: '#/components/schemas/DeviceStatus'
        configuration:
          items:
            $ref: '#/components/schemas/DeviceConfigurationItem'
          type: array
      type: object
    DeviceConfigurationItem:
      example:
        message: message
        params:
        - {}
        - {}
      properties:
        message:
          type: string
        params:
          type: object
      type: object
    DeviceLog:
      example:
        logs:
        - logs
        - logs
        status: connected
      properties:
        status:
          $ref: '#/components/schemas/DeviceStatus'
        logs:
          items:
            type: string
          type: array
      type: object
    DevicePacketTraces:
      example:
        logs:
        - logs
        - logs
        status: connected
      properties:
        status:
          $ref: '#/components/schemas/DeviceStatus'
        logs:
          items:
            type: string
          type: array
      type: object
    DeviceUpgradeRequest:
      type: object
      properties:
        date:
          type: string
    DevicesUpgradeRequest:
      type: object
      properties:
        devices:
          type: array
          items:
            type: string
        date:
          type: string
    DevicePolicies:
      type: object
      properties:
        multilink:
          type: object
          $ref: '#/components/schemas/DevicePolicy'
      required:
        - multilink
    DevicePolicy:
      type: object
      properties:
        policy:
          type: object
          properties:
            _id:
              maxLength: 24
              minLength: 24
              type: string
            name:
              type: string
            description:
              type: string
        status:
          enum:
          - ''
          - installing
          - installed
          - uninstalling
          type: string

    Tunnel:
      example:
        tunnelStatusA: '{}'
        num: 0
        interfaceADetails: '{}'
        isActive: true
        interfaceBDetails: '{}'
        tunnelStatusB: '{}'
        interfaceA: '{}'
        interfaceB: '{}'
        deviceA: '{}'
        deviceAconf: true
        deviceB: '{}'
        __v: 6
        deviceBconf: true
        _id: _id
      properties:
        num:
          type: integer
        isActive:
          type: boolean
        deviceAconf:
          type: boolean
        deviceBconf:
          type: boolean
        _id:
          maxLength: 24
          minLength: 24
          type: string
        __v:
          type: integer
        deviceA:
          type: object
        deviceB:
          type: object
        interfaceA:
          type: object
        interfaceB:
          type: object
        interfaceADetails:
          type: object
        interfaceBDetails:
          type: object
        tunnelStatusA:
          type: object
        tunnelStatusB:
          type: object
      type: object
    StaticRouteRequest:
      example:
        _id: _id
        destination: destination
        interface: interface
        gateway: gateway
        metric: metric
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        destination:
          description: Destination
          maxLength: 24
          type: string
        gateway:
          description: Gateway to use
          maxLength: 24
          type: string
        interface:
          description: Interface name
          maxLength: 24
          type: string
        metric:
          description: Route metric
          type: string
      type: object
    StaticRoute:
      example:
        destination: destination
        ifname: interface
        gateway: gateway
        metric: metric
        status: "completed"
      properties:
        _id:
          type: string
        destination:
          description: Destination
          maxLength: 24
          type: string
        gateway:
          description: Gateway to use
          maxLength: 24
          type: string
        ifname:
          description: Interface name
          maxLength: 24
          type: string
        metric:
          description: Route metric
          type: string
        status:
          description: Route status
          type: string
      type: object
    DhcpMacAssign:
      example:
        host: "host1"
        mac: "08:00:27:fd:00:00"
        ipv4: "20.20.20.20"
      properties:
        host:
          description: Device hostname
          minLength: 1
          maxLength: 253
          type: string
        mac:
          description: MAC Address
          maxLength: 20
          type: string
        ipv4:
          description: IPv4 Address
          maxLength: 20
          type: string
      required:
      - host
      - mac
      - ipv4
    DhcpRequest:
      example:
        interface: "0000:00:08.00"
        rangeStart: "20.20.20.2"
        rangeEnd: "20.20.20.255"
        dns: ["8.8.8.8", "8.8.8.4"]
        macAssign: [{"host":"host1", "mac":"08:00:27:fd:00:00", "ipv4":"20.20.20.20"}]
      properties:
        interface:
          description: Interface PCI Address
          maxLength: 24
          type: string
        rangeStart:
          description: Start IP Range
          maxLength: 20
          type: string
        rangeEnd:
          description: End IP Range
          maxLength: 20
          type: string
        dns:
          description: List of DNS address
          items:
            type: string
            maxLength: 20
          type: array
        macAssign:
          description: List of MAC Assignments
          items:
            $ref: '#/components/schemas/DhcpMacAssign'
          type: array
      required:
      - interface
      - rangeStart
      - rangeEnd
      type: object
    Dhcp:
      example:
        _id: "5e5f662f1b0eba50742b6223"
        interface: "0000:00:08.00"
        rangeStart: "20.20.20.2"
        rangeEnd: "20.20.20.255"
        dns: ["8.8.8.8", "8.8.8.4"]
        macAssign: [{"host":"host1", "mac":"08:00:27:fd:00:00", "ipv4":"20.20.20.20"}]
        status: "completed"
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        interface:
          description: Interface PCI Address
          maxLength: 24
          type: string
        rangeStart:
          description: Start IP Range
          maxLength: 20
          type: string
        rangeEnd:
          description: End IP Range
          maxLength: 20
          type: string
        dns:
          description: List of DNS address
          items:
            type: string
            maxLength: 20
          type: array
        macAssign:
          description: List of MAC Assignments
          items:
            $ref: '#/components/schemas/DhcpMacAssign'
          type: array
        status:
          description: Route status
          type: string
      type: object
    ResetPasswordRequest:
      example:
        email: email
      properties:
        email:
          type: string
      type: object
    UpdatePasswordRequest:
        example:
          email: email
        properties:
          email:
            type: string
        type: object
    OrganizationSelectRequest:
      properties:
        org:
          type: string
      type: object
    RegisterAccountRequest:
      example:
        userJobTitle: userJobTitle
        serviceType: Provider
        country: country
        password: password
        accountName: accountName
        userLastName: userLastName
        userPhoneNumber: userPhoneNumber
        acceptTerms: true
        userFirstName: userFirstName
        companySize: companySize
        email: email
        numberSites: 0
      properties:
        accountName:
          type: string
        email:
          type: string
        userFirstName:
          type: string
        userLastName:
          type: string
        userJobTitle:
          type: string
        userPhoneNumber:
          type: string
        password:
          type: string
        country:
          maxLength: 2
          type: string
        companySize:
          type: string
        serviceType:
          enum:
          - Provider
          - Internal
          type: string
        numberSites:
          type: integer
        acceptTerms:
          type: boolean
      type: object
    AccountSelectRequest:
      example:
        account: "12345678890"
      properties:
        account:
          type: string
      type: object
    CreateTunnelCommand:
      properties:
        devices:
          items:
            type: string
          type: array
      type: object
    DeleteTunnelCommand:
      properties:
        id:
          type: string
      type: object
    DeviceCommand:
      type: object
      properties:
        method:
          type: string
        devices:
          type: object
        meta:
          type: object
    Invoice:
      properties:
        id:
          type: string
        type:
          type: string
        payment_method:
          type: string
        amount:
          type: string
        base_currency_code:
          type: string
        status:
          type: string
        date:
          type: string
    BillingSummary:
      properties:
        _id:
          type: string
        current:
          type: integer
        max:
          type: integer
        account:
          type: string
    Billing:
      properties:
        invoices:
          items:
            $ref: '#/components/schemas/Invoice'
          type: array
        summary:
          $ref: '#/components/schemas/BillingSummary'
          nullable: true
        subscription:
          type: string
    CouponRequest:
      properties:
        name:
          type: string
    PathLabel:
      example:
        _id: id
        name: name
        description: description
        color: color,
        type: type
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        description:
          type: string
        color:
          type: string
        type:
          enum:
          - DIA
          - Tunnel
          type: string
      required:
      - name
      - description
      - color
      - type
      type: object
    PathLabelRequest:
      example:
        name: name
        description: description
        color: color
      properties:
        name:
          type: string
        description:
          type: string
        color:
          type: string
      required:
        - name
        - description
        - color
        - type
      type: object
    MLPolicy:
      example:
        _id: id
        name: name
        description: description
        rules: [rule 1, rule 2, ...]
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        description:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/MLRule'
          type: array
      required:
      - _id
      - name
      - description
      - rules
      type: object
    MLPolicyList:
      example:
        id: id
        name: name
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
      required:
      - _id
      - name
    MLPolicyMetaData:
      example:
        _id: id
        name: name
        description: description
        installCount: installCount
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        description:
          type: string
        installCount:
          $ref: '#/components/schemas/PolicyInstallCount'
          type: object
      required:
      - _id
      - name
      - description
      - installCount
      type: object
    PolicyInstallCount:
      example:
        installed: installed
        pending: pending
        failed: failed
        deleted: deleted
      properties:
        installed:
          type: integer
        pending:
          type: integer
        failed:
          type: integer
        deleted:
          type: integer
      required:
      - installed
      - pending
      - failed
      - deleted
    MLPolicyRequest:
      example:
        name: name
        description: description
        rules: [rule 1, rule 2, ...]
      properties:
        name:
          type: string
        description:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/MLRuleRequest'
          type: array
      required:
      - name
      - description
      - rules
      type: object
    MLRule:
      example:
        _id: id
        name: name
        priority: priority
        enabled: true
        classification: classification
        action: action
      properties:
        _id:
          maxLength: 24
          minLength: 24
          type: string
        name:
          type: string
        priority:
          type: integer
          minimum: 0
          maximum: 1000
        enabled:
          type: boolean
        classification:
          schema:
          $ref: '#/components/schemas/MLClassification'
        action:
          schema:
          $ref: '#/components/schemas/MLAction'
      required:
      - _id
      - name
      - priority
      - enabled
      - classification
      - action
      type: object
    MLRuleRequest:
      example:
        name: name
        priority: priority
        enabled: true
        classification: classification
        action: action
      properties:
        name:
          type: string
        priority:
          type: integer
          minimum: 0
          maximum: 1000
        enabled:
            type: boolean
        classification:
          $ref: '#/components/schemas/MLClassification'
        action:
          $ref: '#/components/schemas/MLAction'
      required:
      - name
      - priority
      - enabled
      - classification
      - action
      type: object
    MLClassification:
      example:
        prefix: prefix
        application: application
      anyOf:
      - $ref: '#/components/schemas/MLClassPrefix'
      - $ref: '#/components/schemas/MLClassApp'
      type: object
    MLAction:
      example:
        links: [link1, link2, ...]
        fallback: fallback
      properties:
        links:
          items:
            anyOf:
            - $ref: '#/components/schemas/LinksRequest'
            - $ref: '#/components/schemas/LinksResponse'
          type: array
        order:
          enum:
          - priority
          - load-balancing
        fallback:
          enum:
          - drop
          - by-destination
          type: string
      required:
        - links
        - order
        - fallback
    LinksResponse:
      properties:
        pathlabels:
          items:
            $ref: '#/components/schemas/PathLabel'
          type: array
        order:
          enum:
          - priority
          - load-balancing
          type: string
      type: object
      required:
        - pathlabels
        - order
    LinksRequest:
      properties:
        pathlabels:
          items:
            type: string
          type: array
        order:
          enum:
          - priority
          - load-balancing
          type: string
      type: object
      required:
        - pathlabels
        - order
    MLClassPrefix:
      properties:
        prefix:
          properties:
            ip:
              type: string
            ports:
              type: string
              pattern: "^$|^()([0-9]|[1-5]?[0-9]{2,4}|6[0-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])(-([0-9]|[1-5]?[0-9]{2,4}|6[0-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5]))?$"
            protocol:
              enum:
              - ""
              - tcp
              - udp
              type: string
          required:
          - ip
          - ports
          - protocol
          type: object
    MLClassApp:
      properties:
        application:
          properties:
            appId:
              type: string
            category:
              type: string
            serviceClass:
              type: string
            importance:
              enum:
              - ''
              - high
              - medium
              - low
              type: string
          required:
          - appId
          - category
          - serviceClass
          - importance
          type: object
    Error:
      properties:
        code:
          type: string
        message:
          type: string
      required:
      - code
      - message
      type: object
    BadRequestError:
      properties:
        error:
          type: string
      required:
      - code
      - message
      type: object
  securitySchemes:
    apiKey:
      in: header
      name: APIKEY
      type: apiKey
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
